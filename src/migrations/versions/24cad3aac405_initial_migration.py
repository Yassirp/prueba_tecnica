"""initial migration

Revision ID: 24cad3aac405
Revises: 7bd207c4159d
Create Date: 2025-05-26 14:18:17.679570

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '24cad3aac405'
down_revision: Union[str, None] = '7bd207c4159d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('m_entity_types', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('m_entity_types', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('m_entity_types', 'state',
               existing_type=sa.SMALLINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('m_entity_types', 'project_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('m_entity_types', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('m_entity_types', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('m_entity_types', 'deleted_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('m_projects', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('m_projects_id_seq'::regclass)"))
    op.alter_column('m_projects', 'name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               nullable=False)
    op.alter_column('m_projects', 'state',
               existing_type=sa.SMALLINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('m_projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('m_projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('m_projects', 'deleted_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('m_projects', 'deleted_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('m_projects', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('m_projects', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('m_projects', 'state',
               existing_type=sa.Integer(),
               type_=sa.SMALLINT(),
               nullable=True)
    op.alter_column('m_projects', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('m_projects', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('m_projects_id_seq'::regclass)"))
    op.alter_column('m_entity_types', 'deleted_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('m_entity_types', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('m_entity_types', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('m_entity_types', 'project_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('m_entity_types', 'state',
               existing_type=sa.Integer(),
               type_=sa.SMALLINT(),
               nullable=True)
    op.alter_column('m_entity_types', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('m_entity_types', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ### 